version: '3.8'

services:
  web:
    build: .
    ports:
      - "3000:3000"
    env_file:
      - .env
    depends_on:
      - db
      - redis
    volumes:
      - app-logs:/logs # Log dosyalarını dışa aktarıyoruz
    restart: unless-stopped # Servisi yeniden başlatma politikası ekleyin

  db:
    image: postgres:15 # Belirli bir sürüm belirtin
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: auth_db
    volumes:
      - postgres-data:/var/lib/postgresql/data # Veritabanı verilerini kalıcı hale getiriyoruz
    restart: unless-stopped # Servisi yeniden başlatma politikası ekleyin

  redis:
    image: redis:7 # Belirli bir sürüm belirtin
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data # Redis verilerini kalıcı hale getiriyoruz
    restart: unless-stopped # Servisi yeniden başlatma politikası ekleyin

  redis-exporter:
    image: oliver006/redis_exporter
    ports:
      - "9121:9121"
    environment:
      - REDIS_ADDR=redis://redis:6379
    depends_on:
      - redis

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/prometheus.yml
    command:
      - --config.file=/prometheus.yml
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3001:3000"
    depends_on:
      - prometheus
    volumes:
      - ./datasource.json:/etc/grafana/provisioning/datasources/datasource.json
    restart: unless-stopped

volumes:
  postgres-data:
  redis-data:
  app-logs:
